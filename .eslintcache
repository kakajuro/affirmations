[{"C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\index.js":"1","C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\App.js":"2","C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\quote.js":"3","C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\funcs.js":"4","C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\loadingSpinner.js":"5","C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\gitIcon.js":"6"},{"size":220,"mtime":1608733137930,"results":"7","hashOfConfig":"8"},{"size":2319,"mtime":1609521130475,"results":"9","hashOfConfig":"8"},{"size":230,"mtime":1609520467748,"results":"10","hashOfConfig":"8"},{"size":161,"mtime":1609516349723,"results":"11","hashOfConfig":"8"},{"size":352,"mtime":1609520866715,"results":"12","hashOfConfig":"8"},{"size":433,"mtime":1609520801747,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1iey1a0",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\index.js",[],["29","30"],"C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\App.js",["31"],"import React, { useState, useEffect } from 'react'\nimport './App.css';\n\nimport LoadingSpinner from './components/loadingSpinner';\nimport Quote from './components/quote';\nimport GithubIcon from './components/gitIcon';\nimport { getRandomInt } from \"./components/funcs\";\n\nfunction App() {\n  const [quote, setQuote] = useState(\"\");\n  const [isLoading, setIsLoading] = useState();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = \"https://zenquotes.io/api/today\";\n\n    fetch(proxyurl + url)\n    .then(response => response.json())\n    .then(responseJSON => setQuote(\"Daily Quote: \" + responseJSON[0].q))\n    .then(() => setIsLoading(false))\n  }, [])\n\n  const makeRequest = () => {\n    setIsLoading(true);\n    const int = getRandomInt(1, 2);\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    var url = \"\";\n\n    if (int===1) {\n      url = \"https://affirmations.dev\";\n      fetch(proxyurl + url) \n      .then(response => response.json())\n      .then(responseJSON => setQuote(responseJSON.affirmation))\n      .then(() => setIsLoading(false))\n      .catch((err) => {\n        setIsLoading(false);\n        setQuote(\"Unable to access quote.\")\n        console.log(err)\n      })\n    } else {\n      setIsLoading(true);\n      url = \"https://zenquotes.io/api/random\"; \n      fetch(proxyurl + url) \n      .then(response => response.json())\n      .then(responseJSON => setQuote(responseJSON[0].q))\n      .then(() => setIsLoading(false))\n      .catch((err) => {\n        setQuote(\"Unable to access quote.\")\n        console.log(err)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"heading\">\n        <GithubIcon />\n      </header>\n    <div className=\"main-window\">\n      <div className=\"container\">\n        <div className=\"quote\">\n          {isLoading ? <LoadingSpinner /> : <Quote loadedQuote={quote}/>}\n        </div>\n        <button\n          className=\"btn\"\n          onClick={() => makeRequest()}\n        >Generate</button>\n      </div>\n\n      <div className=\"credits\">\n        <p>Inspirational quotes provided by <a href=\"https://zenquotes.io/\" target=\"_blank\"> ZenQuotes API</a> and <a href=\"https://github.com/annthurium/affirmations/\">affirmations.dev</a>\n        </p>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default App;","C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\quote.js",[],["32","33"],"C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\funcs.js",[],"C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\loadingSpinner.js",[],"C:\\Users\\Dell\\Documents\\Coding\\js\\React\\affirmative\\src\\components\\gitIcon.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":72,"column":77,"nodeType":"40","endLine":72,"endColumn":92},{"ruleId":"34","replacedBy":"41"},{"ruleId":"36","replacedBy":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["43"],["44"],"no-global-assign","no-unsafe-negation"]